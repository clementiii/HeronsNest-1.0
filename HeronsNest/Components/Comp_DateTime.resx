<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="timeFrame.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="icon_Calendar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABoAAAAWCAYAAADeiIy1AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        cQAAEnEB89x6jgAAAdtJREFUSEvtlE2raWEUx+9HkJepgQykDIykfARFMjBQBgwNDXwIE1IkAx/ATKEw
        IWYUSQyEvAzkpbzLy/+2ln1Ot3t2qafOmdz7r9XTWs/e67fXXs96fuGH9A+Bns8nksmk5L10PB4RDAYx
        n8+lyEuhUAj1el3y5CULymQycLvd8Pl8qNVqcDqdsNlssFgsUKlUMJvN7H+YWq2G0WjEcDiUMnyVLMhg
        MKBQKCCfz7NP1ZGdz2ckEgms12s8Hg+O0UqxdrvNH7Hf7/mdvyULMplMKJVKuFwuUuQlSrzb7Xj9UxS7
        Xq9ioHK5LHnv9VGxUqn8XhDpx0DUK2EQfeXpdMJsNvvszXg8xu12454sFgs+GLQSQBg0mUyw2WzQ6XSw
        XC4Z0Gq1eJ4oYbfbxXQ6/dwXAlUqFUSjUVSrVfj9fj7q2+0WXq8X/X6fITS86XQagUAAxWJRvKJcLode
        r8fAZrOJw+GASCTCVVC1qVSKn4vFYrwvDKLE1Av6fTSs1KPVaoX7/c5G+zRr1D9ahUGNRoPvNapsMBgw
        NJvNyiYTOt56vZ7vM5fLBY/H89YcDgfsdjvC4TAfGDnJguLxOKxWKzQaDRQKxVvTarXQ6XQYjUZShq+S
        BX2H/oMEBfwGYkAWiMXTPGAAAAAASUVORK5CYII=
</value>
  </data>
  <data name="icon_Clock.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAATCAYAAACQjC21AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        cQAAEnEB89x6jgAAADt0RVh0Q29tbWVudAB4cjpkOkRBRjREY3hodWUwOjIsajo2NTA2OTg5MDM1ODY1
        OTcwNzMwLHQ6MjMxMjI2MDU2L0Q7AAACGElEQVQ4T62Uu2pqURCGzwt4ARW1UrwVRqOCVVKJSelLWFrY
        2fkGVr6BWghpBKugqCBCGisvoIWIqMEbGoKCxNt/mMl2x63HkMD5YIo9e61/z6x/1v6D/8y3gpvNBm9v
        bxgOh5hOp9jv98Kb61wIbrdb1Ot1PD4+QqlUQiaTiaHRaOBwOJBKpYTVl0gEqQKz2QydTod4PM5VUSQS
        CQwGA458Pg+n0wmPxyPskiIR7PV6MBqNCIVC3C7R7/eh1+vx/PyMw+HAH81kMlCpVFgul7zmFFGQWrXZ
        bJjP57zxSLfb5Xaz2ayQ+aRWqyEQCKDdbguZT0TBZDKJu7s74emLa4IEVX5/fy8pgAUpYbVa8fT0xMlT
        vhOMRCKQy+WYzWZCRhCkdrVaLb/odDoolUooFosc6XT6qmAul2ODaCqOsCAZQCOx2+0QDAbZQbfbLYbP
        58PLywtvOKVSqcDr9aJarQqZswonkwkWiwWazSYajYYY4/GY15xTKBTgcrnYoCPiGZLDNA6/IRqN8vBf
        nCFBLt/e3gpPP4NmkW7OhcvEer2GyWTilk8XXIPafHh4kBhCiIIE3QqDwYBwOCzelHPoppC7arUa7+/v
        QvYLiSAttlgsbFAsFmOTaBNVv1qt+K9TLpdxc3PD7v8LiSBBbrZaLfj9figUCp7BY1BVdrudfxzXuBA8
        5ePjg8/09fUVo9HoR2f7reDvAf4Cm2EoQPmNPVoAAAAASUVORK5CYII=
</value>
  </data>
</root>